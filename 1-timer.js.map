{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n\nconst startBtnEl = document.querySelector('[data-start]');\nconst datePicker = document.querySelector('#datetime-picker');\n\nconst timer = {\n  deadline: null,\n  intervalID: null,\n  elements: {\n    days: document.querySelector('[data-days]'),\n    hours: document.querySelector('[data-hours]'),\n    minutes: document.querySelector('[data-minutes]'),\n    seconds: document.querySelector('[data-seconds]'),\n  },\n\n  start() {\n    this.intervalID = setInterval(() => {\n      const diff = this.deadline.getTime() - Date.now();\n      if (diff <= 0) {\n        this.stop();\n        return;\n      }\n      let { days, hours, minutes, seconds } = this.convertMs(diff);\n      this.elements.days.textContent = this.pad(days);\n      this.elements.hours.textContent = this.pad(hours);\n      this.elements.minutes.textContent = this.pad(minutes);\n      this.elements.seconds.textContent = this.pad(seconds);\n    }, 1000);\n\n    startBtnEl.disabled = true;\n    datePicker.disabled = true;\n  },\n\n  stop() {\n    clearInterval(this.intervalID);\n    datePicker.disabled = false;\n    startBtnEl.disabled = true;\n  },\n\n  convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n  },\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  },\n};\n\nflatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n\n    const isCorrectDate = selectedDates[0] - Date.now() > 0;\n    if (!isCorrectDate) {\n      iziToast.error({\n        title: 'Error!',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtnEl.disabled = true;\n      return;\n    }\n\n    startBtnEl.disabled = false;\n\n    timer.deadline = selectedDates[0];\n\n    startBtnEl.addEventListener('click', event => {\n      timer.start();\n    });\n  },\n});\n"],"names":["startBtnEl","datePicker","timer","diff","days","hours","minutes","seconds","ms","value","flatpickr","selectedDates","iziToast","event"],"mappings":"wvBAGA,MAAMA,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAa,SAAS,cAAc,kBAAkB,EAEtDC,EAAQ,CACZ,SAAU,KACV,WAAY,KACZ,SAAU,CACR,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CACjD,EAED,OAAQ,CACN,KAAK,WAAa,YAAY,IAAM,CAClC,MAAMC,EAAO,KAAK,SAAS,QAAO,EAAK,KAAK,MAC5C,GAAIA,GAAQ,EAAG,CACb,KAAK,KAAI,EACT,MACD,CACD,GAAI,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAK,KAAK,UAAUJ,CAAI,EAC3D,KAAK,SAAS,KAAK,YAAc,KAAK,IAAIC,CAAI,EAC9C,KAAK,SAAS,MAAM,YAAc,KAAK,IAAIC,CAAK,EAChD,KAAK,SAAS,QAAQ,YAAc,KAAK,IAAIC,CAAO,EACpD,KAAK,SAAS,QAAQ,YAAc,KAAK,IAAIC,CAAO,CACrD,EAAE,GAAI,EAEPP,EAAW,SAAW,GACtBC,EAAW,SAAW,EACvB,EAED,MAAO,CACL,cAAc,KAAK,UAAU,EAC7BA,EAAW,SAAW,GACtBD,EAAW,SAAW,EACvB,EAED,UAAUQ,EAAI,CAMZ,MAAMJ,EAAO,KAAK,MAAMI,EAAK,KAAG,EAC1BH,EAAQ,KAAK,MAAOG,EAAK,MAAO,IAAI,EACpCF,EAAU,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,EACjDD,EAAU,KAAK,MAASC,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,EAED,IAAIE,EAAO,CACT,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CACH,EAEAC,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CAIrB,GAHA,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAGxB,EADkBA,EAAc,CAAC,EAAI,KAAK,IAAK,EAAG,GAClC,CAClBC,EAAS,MAAM,CACb,MAAO,SACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDZ,EAAW,SAAW,GACtB,MACD,CAEDA,EAAW,SAAW,GAEtBE,EAAM,SAAWS,EAAc,CAAC,EAEhCX,EAAW,iBAAiB,QAASa,GAAS,CAC5CX,EAAM,MAAK,CACjB,CAAK,CACF,CACH,CAAC"}